name: Publish Docker image

on:
  - push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        ref:
        - "v0.7.1"
        - "092e3bf032a4bf7c5f879d1939a0553ef811b5e5"  # yuji/multitoken
        - "70adf7987ac1aae10f2447adc363b786723cdf8a"  # eth-bridge-integration
        ref_fflags:
        - "default"
        include:
        - ref: "70adf7987ac1aae10f2447adc363b786723cdf8a"
          ref_fflags: "namada_apps/eth-fullnode"
        exclude:
        - ref: "70adf7987ac1aae10f2447adc363b786723cdf8a"
          ref_fflags: "default"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha
            type=raw,value=${{ matrix.ref }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64 # no linux/arm64 yet - https://github.com/docker/build-push-action/issues/621
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            REF=${{ matrix.ref }}
            ANOMA_REF_FFLAGS=${{ matrix.ref_fflags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
